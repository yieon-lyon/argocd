# This is a basic workflow to help you get started with Actions

name: argo-cd-build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        default: '2.4.9'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  main:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: "argocd"
      working-directory: ./iac/argocd/images/
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Docker Build
      working-directory: ${{ env.working-directory }}
      run: >
        docker build -t ${{ env.ECR_REPOSITORY }} .

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.event.inputs.version }}
      run: |
        docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Add Version Tag to Git
      uses: hole19/git-tag-action@master
      env:
        TAG: ${{ github.event.inputs.version }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}